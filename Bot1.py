# --- Ph·∫ßn 1: Nh·∫≠p c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt ---
import discord
from discord.ext import commands
import google.generativeai as genai
import os
from dotenv import load_dotenv

# --- Ph·∫ßn 2: T·∫£i v√† c·∫•u h√¨nh c√°c kh√≥a b√≠ m·∫≠t ---
load_dotenv()
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
GOOGLE_API_KEY = os.getenv('GOOGLE_API_KEY')

if not DISCORD_TOKEN or not GOOGLE_API_KEY:
    print("L·ªñI: Vui l√≤ng thi·∫øt l·∫≠p DISCORD_TOKEN v√† GOOGLE_API_KEY trong t·ªáp .env")
    exit()

genai.configure(api_key=GOOGLE_API_KEY)

# --- Ph·∫ßn 3: Thi·∫øt l·∫≠p m√¥ h√¨nh AI ---
model = genai.GenerativeModel('gemini-2.5-pro')

def hoiai(question):
    """
    H√†m n√†y g·ª≠i c√¢u h·ªèi ƒë·∫øn Google AI v√† tr·∫£ v·ªÅ c√¢u tr·∫£ l·ªùi.
    """
    try:
        response = model.generate_content(question)
        return response.text
    except Exception as e:
        print(f"ƒê√£ x·∫£y ra l·ªói khi g·ªçi API: {e}")
        return "Xin l·ªói, t√¥i g·∫∑p s·ª± c·ªë khi k·∫øt n·ªëi v·ªõi b·ªô n√£o AI c·ªßa m√¨nh. üß†üí•"

# --- Ph·∫ßn 4: Thi·∫øt l·∫≠p Bot Discord ---
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

# --- Ph·∫ßn 5: ƒê·ªãnh nghƒ©a c√°c s·ª± ki·ªán cho Bot ---

@bot.event
async def on_ready():
    """
    S·ª± ki·ªán n√†y s·∫Ω ch·∫°y m·ªôt l·∫ßn khi bot k·∫øt n·ªëi th√†nh c√¥ng v·ªõi Discord.
    """
    print(f'Bot ƒë√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n {bot.user}')
    print('Bot ƒë√£ s·∫µn s√†ng nh·∫≠n c√¢u h·ªèi!')
    print('----------------------------------')

@bot.event
async def on_message(message):
    """
    S·ª± ki·ªán n√†y ch·∫°y m·ªói khi c√≥ m·ªôt tin nh·∫Øn m·ªõi trong b·∫•t k·ª≥ k√™nh n√†o m√† bot c√≥ th·ªÉ th·∫•y.
    """
    # 1. B·ªè qua tin nh·∫Øn t·ª´ ch√≠nh bot
    if message.author == bot.user:
        return

    # 2. Ki·ªÉm tra xem bot c√≥ ƒë∆∞·ª£c @tag (nh·∫Øc ƒë·∫øn) trong tin nh·∫Øn kh√¥ng
    if bot.user.mentioned_in(message):
        async with message.channel.typing():
            # L·∫•y n·ªôi dung c√¢u h·ªèi (ƒë√£ lo·∫°i b·ªè ph·∫ßn @tag)
            question = message.content.replace(f'<@!{bot.user.id}>', '').replace(f'<@{bot.user.id}>', '').strip()

            # *** THAY ƒê·ªîI ·ªû ƒê√ÇY ***
            # B√¢y gi·ªù ch√∫ng ta kh√¥ng ki·ªÉm tra c√¢u h·ªèi ƒë·∫∑c bi·ªát n·ªØa,
            # m√† g·ª≠i th·∫≥ng c√¢u h·ªèi ƒë·∫øn h√†m `hoiai` ƒë·ªÉ AI x·ª≠ l√Ω.
            print(f"Nh·∫≠n c√¢u h·ªèi t·ª´ '{message.author}': {question}")
            answer = hoiai(question)
            print(f"G·ª≠i c√¢u tr·∫£ l·ªùi: {answer[:50]}...")

            # G·ª≠i c√¢u tr·∫£ l·ªùi l·∫°i k√™nh
            await message.reply(answer)

# --- Ph·∫ßn 6: Ch·∫°y Bot ---
print("ƒêang kh·ªüi ƒë·ªông bot...")
bot.run(DISCORD_TOKEN)
      
